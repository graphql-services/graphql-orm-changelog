name: Go

on:
  push:
    branches: [master, main]
    tags:
      - v*

jobs:
  build-lambda:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Build orm
        run: make build-lambda-function-orm && mkdir release && mv lambda.zip release/lambda-orm.zip
      - name: Build event handler
        run: make build-lambda-function-event-handler && mv lambda.zip release/lambda-event-handler.zip

      - name: Upload to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: novacloud-lambda-functions
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "eu-central-1"
          SOURCE_DIR: "release"
          DEST_DIR: github.com/${GITHUB_REPOSITORY}/${GITHUB_REF##refs/*/}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset orm
        id: upload-release-asset-orm
        uses: actions/upload-release-asset@v1
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/lambda-orm.zip
          asset_name: lambda-orm.zip
          asset_content_type: application/zip
      - name: Upload Release Asset event handler
        id: upload-release-asset-event-handler
        uses: actions/upload-release-asset@v1
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/lambda-event-handler.zip
          asset_name: lambda-event-handler.zip
          asset_content_type: application/zip
  # build-docker:
  #   name: Build docker image
  #   runs-on: ubuntu-latest
  #   env:
  #     DOCKER_USER: ${{ secrets.DOCKER_USER }}
  #     DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  #   steps:
  #     - name: Set up Go 1.x
  #       uses: actions/setup-go@v2
  #       with:
  #         go-version: ^1.13

  #     - name: Check out code into the Go module directory
  #       uses: actions/checkout@v2

  #     - name: Build
  #       run: make build

  #     - name: Push
  #       run: make tag && make push
