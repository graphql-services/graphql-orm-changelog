package gen

import (
	"github.com/jinzhu/gorm"
	"gopkg.in/gormigrate.v1"
)

// Migrate ...
func Migrate(db *gorm.DB, options *gormigrate.Options, migrations []*gormigrate.Migration) error {
	m := gormigrate.New(db, options, migrations)

	// // it's possible to use this, but in case of any specific keys or columns are created in migrations, they will not be generated by automigrate
	// m.InitSchema(func(tx *gorm.DB) error {
	// 	return AutoMigrate(db)
	// })

	return m.Migrate()
}

// AutoMigrate ...
func AutoMigrate(db *gorm.DB) (err error) {
	_db := db.AutoMigrate(
		ChangelogChange{},
		Changelog{},
	)

	if _db.Dialect().GetName() != "sqlite3" {

		err = _db.Model(ChangelogChange{}).RemoveForeignKey("logId", TableName("changelogs")+"(id)").Error
		if err != nil {
			return err
		}
		err = _db.Model(ChangelogChange{}).AddForeignKey("logId", TableName("changelogs")+"(id)", "SET NULL", "SET NULL").Error
		if err != nil {
			return err
		}

	}
	return _db.Error
}
